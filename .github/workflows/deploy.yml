name: Deploy to DigitalOcean

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Allows manual trigger

env:
  NODE_VERSION: '20.x'

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test -- --passWithNoTests
    
    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production
        NEXT_PUBLIC_SITE_URL: https://bali.report

  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    needs: test  # Only deploy if tests pass
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DROPLET_IP }}
        username: ${{ secrets.DROPLET_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          # Navigate to application directory
          cd /home/deploy/bali-report
          
          # Pull latest changes
          git pull origin main
          
          # Install dependencies
          npm ci --production
          
          # Build the application
          npm run build
          
          # Restart PM2 process
          pm2 restart bali-report --update-env
          
          # Save PM2 state
          pm2 save
          
          # Reload Nginx (in case of config changes)
          sudo nginx -t && sudo systemctl reload nginx
          
          # Log deployment
          echo "[$(date)] Deployment completed for commit: $(git rev-parse --short HEAD)" >> ~/deployments.log

  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: deploy
    if: always()  # Run regardless of deployment success/failure
    
    steps:
    - name: Send notification
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "✅ Deployment successful!"
          # Add Slack/Discord/Email notification here if needed
        else
          echo "❌ Deployment failed!"
          # Add failure notification here
        fi