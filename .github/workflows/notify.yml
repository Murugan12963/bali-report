name: Site Status Notifications

on:
  schedule:
    - cron: '*/30 * * * *'  # Every 30 minutes
  workflow_dispatch:  # Allow manual trigger

jobs:
  health-check:
    runs-on: ubuntu-latest
    env:
      SITE_URL: ${{ secrets.SITE_URL || 'http://localhost:3000' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Start server
      run: npm start & sleep 10
      
    - name: Check site health
      id: healthcheck
      run: |
        # Try production URL first if available
        if [[ -n "${{ secrets.SITE_URL }}" ]]; then
          HEALTH_STATUS=$(curl -s -o response.txt -w "%{http_code}" "${{ secrets.SITE_URL }}/api/health")
        else
          HEALTH_STATUS=$(curl -s -o response.txt -w "%{http_code}" "http://localhost:3000/api/health")
        fi
        
        cat response.txt
        
        if [[ "$HEALTH_STATUS" =~ ^2[0-9][0-9]$ ]]; then
          echo "status=healthy" >> $GITHUB_OUTPUT
          echo "‚úÖ Health check passed with status $HEALTH_STATUS"
        else
          echo "status=unhealthy" >> $GITHUB_OUTPUT
          echo "‚ùå Health check failed with status $HEALTH_STATUS"
          cat response.txt
          exit 1
        fi

    - name: Create issue on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'üö® Site Health Check Failed',
            body: `Site health check failed at ${new Date().toISOString()}
            
            Please check:
            1. Server status
            2. Application logs
            3. Database connectivity
            4. RSS feed status
            
            [View server status](https://bali.report/api/health)`,
            labels: ['alert', 'site-health']
          });
          
          console.log(`Created issue #${issue.data.number}`);

  # Backup check temporarily disabled until SSH setup is complete
  # backup-check:
  #   runs-on: ubuntu-latest
  #   needs: health-check
  #   if: false # Disabled
  #   steps:
  #   - name: Check backup status
  #     id: backup
  #     run: echo "Backup check disabled"

  notify-status:
    runs-on: ubuntu-latest
    needs: health-check
    if: always()
    steps:
    - name: Send status email
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: ${{ secrets.SMTP_SERVER }}
        server_port: ${{ secrets.SMTP_PORT }}
        secure: true
        username: ${{ secrets.SMTP_USERNAME }}
        password: ${{ secrets.SMTP_PASSWORD }}
        subject: Bali Report - Site Health Check ${{ needs.health-check.result == 'success' && '‚úÖ' || '‚ùå' }}
        body: |
          Health Check Status: ${{ needs.health-check.result }}
          Time: ${{ github.event.head_commit.timestamp || github.event.schedule }}
          
          ${{ needs.health-check.result == 'success' && 'All systems operational.' || 'Health check failed. Please check server logs.' }}
          
          View details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        to: ${{ secrets.NOTIFICATION_EMAIL }}
        from: ${{ secrets.SMTP_FROM }}
        reply_to: ${{ secrets.SMTP_FROM }}
