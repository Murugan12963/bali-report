// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserCredentials {
  id          String   @id @default(cuid())
  userId      String   @unique
  password    String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("user")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts      Account[]
  sessions      Session[]
  preferences   UserPreferences?
  subscription  UserSubscription?
  credentials   UserCredentials?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model UserPreferences {
  id                 String    @id @default(cuid())
  userId             String    @unique
  darkMode           Boolean   @default(false)
  language           String    @default("en")
  contentPreferences String[]  @default([])
  emailNotifications Boolean   @default(true)
  pushNotifications  Boolean   @default(false)
  articleDisplay     String    @default("comfortable")
  autoplayVideos     Boolean   @default(false)
  readingHistory     String[]  @default([])
  favoriteTopics     String[]  @default([])
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserSubscription {
  id          String   @id @default(cuid())
  userId      String   @unique
  tier        String   @default("basic")
  status      String   @default("active")
  expiresAt   DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
